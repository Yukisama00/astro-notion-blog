---
---

<div class="search-modal-container">
  <div class="overlay"></div>

  <div class="search-modal">
    <div class="search-prompt">
      <input type="text" placeholder="Search..." />
    </div>
    <div class="search-result">
      <ul>
        <li class="selected">
          <a href="#">
            <div class="search-result-title"></div>
            <div class="search-result-description"></div>
          </a>
        </li>
      </ul>
    </div>
  </div>
</div>

<style>
  .search-modal-container {
    display: none;
  }

  .overlay {
    z-index: 99;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
  }

  .search-modal {
    z-index: 100;
    position: fixed;
    top: 100px;
    left: 20%;
    width: 60%;
    border-radius: 8px;
    background-color: white;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
    border: 1px solid #e0e0e0;
    overflow: hidden;
  }
  
  @media (max-width: 640px) {
    .search-modal {
      left: 5%;
      width: 90%;
      top: 50px;
    }
  }

  .search-prompt {
    margin: 0;
    padding: 16px;
    background-color: #f8f9fa;
    border-bottom: 1px solid #e0e0e0;
  }
  
  .search-prompt input {
    width: 100%;
    border: 2px solid #e0e0e0;
    border-radius: 6px;
    padding: 12px 16px;
    background-color: white;
    color: #333;
    font-size: 16px;
    line-height: 1.4;
    outline: none;
    transition: border-color 0.2s ease;
  }
  
  .search-prompt input:focus {
    border-color: #0066cc;
    box-shadow: 0 0 0 3px rgba(0, 102, 204, 0.1);
  }

  .search-result {
    background-color: white;
    max-height: 400px;
    overflow-y: auto;
  }
  
  .search-result ul {
    list-style: none;
    margin: 0;
    padding: 8px 0;
  }
  
  .search-result li {
    margin: 0 !important;
    padding: 0 !important;
    border-bottom: 1px solid #f0f0f0 !important;
  }
  
  .search-result li:last-child {
    border-bottom: none !important;
  }
  
  .search-result li a {
    display: block !important;
    padding: 16px 16px !important;
    text-decoration: none !important;
    color: #333 !important;
    transition: all 0.15s ease !important;
    border-left: 3px solid transparent !important;
  }
  
  .search-result li a:hover {
    background-color: #f0f7ff;
    border-left-color: #0066cc;
  }
  
  .search-result li a:hover .search-result-title {
    color: #0066cc;
  }
  
  .search-result li a:hover .search-result-description {
    color: #555;
  }
  
  .search-result li.selected a {
    background-color: #0066cc;
    color: white;
    border-left-color: #004499;
  }

  .search-result-title {
    padding: 0;
    color: #1a1a1a;
    font-size: 18px;
    line-height: 1.3;
    font-weight: 700;
    margin-bottom: 8px;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  }
  
  .search-result-description {
    margin: 0;
    color: #666;
    opacity: 0.9;
    font-size: 13px;
    line-height: 1.4;
    font-weight: 400;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  
  .search-result li.selected .search-result-title {
    color: white;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  }
  
  .search-result li.selected .search-result-description {
    color: rgba(255, 255, 255, 0.9);
    opacity: 1;
  }

  .no-results, .error-message {
    padding: 24px 16px;
    text-align: center;
    color: #666;
    font-style: italic;
  }
  
  .error-message {
    color: #dc3545;
    font-weight: 600;
    font-style: normal;
  }

  /* 検索結果のハイライト表示 */
  .search-highlight {
    background-color: #ffeb3b;
    font-weight: bold;
    padding: 1px 3px;
    border-radius: 3px;
    color: #333;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  }

  .search-result li.selected .search-highlight {
    background-color: #ffd700;
    color: #000;
  }

  .loading-indicator {
    padding: 24px 16px;
    text-align: center;
    color: #666;
    font-style: italic;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    console.log('SearchModal script loaded');

    var feedItems = [];
    var fetched = false;
    var isModalOpen = false;
    var isLoading = false;

    function openModal() {
      isModalOpen = true;
      var container = document.querySelector('.search-modal-container');
      if (container) {
        container.style.display = 'block';
      }
      
      var input = document.querySelector('.search-prompt input');
      if (input) {
        input.focus();
      }

      if (!fetched && !isLoading) {
        isLoading = true;
        renderLoading();
        fetchRSS().then(function() {
          searchAndRender();
        }).catch(function(error) {
          console.error('Failed to fetch RSS:', error);
          renderError();
        }).finally(function() {
          isLoading = false;
        });
      } else {
        searchAndRender();
      }
    }

    function closeModal() {
      isModalOpen = false;
      var container = document.querySelector('.search-modal-container');
      if (container) {
        container.style.display = 'none';
      }
      
      var input = document.querySelector('.search-prompt input');
      if (input) {
        input.value = '';
      }
    }

    function handleKeydown(event) {
      if (!isModalOpen) return;

      if (event.keyCode === 13) {
        // Enter
        event.preventDefault();
        select();
      } else if (event.keyCode === 27) {
        // ESC
        event.preventDefault();
        closeModal();
      } else if (event.keyCode === 38) {
        // Up
        selectUp(event);
      } else if (event.keyCode === 40) {
        // Down
        selectDown(event);
      }
    }

    function handleInput() {
      if (isModalOpen) {
        searchAndRender();
      }
    }

    function select() {
      var selectedLink = document.querySelector('.search-result ul > li.selected a');
      if (selectedLink && selectedLink.href !== '#') {
        window.location.href = selectedLink.href;
      }
    }

    function selectFirst() {
      var currentSelected = document.querySelector('.search-result ul > li.selected');
      if (currentSelected) {
        currentSelected.classList.remove('selected');
      }

      var firstItem = document.querySelector('.search-result ul > li:first-child');
      if (firstItem) {
        firstItem.classList.add('selected');
      }
    }

    function selectUp(event) {
      event.preventDefault();

      var ul = document.querySelector('.search-result ul');
      var selected = ul.querySelector('.selected');
      if (selected) {
        selected.classList.remove('selected');

        if (selected.previousElementSibling) {
          selected.previousElementSibling.classList.add('selected');
        } else {
          ul.lastElementChild.classList.add('selected');
        }
      } else {
        var lastChild = ul.lastElementChild;
        if (lastChild) {
          lastChild.classList.add('selected');
        }
      }
    }

    function selectDown(event) {
      event.preventDefault();

      var ul = document.querySelector('.search-result ul');
      var selected = ul.querySelector('.selected');
      if (selected) {
        selected.classList.remove('selected');

        if (selected.nextElementSibling) {
          selected.nextElementSibling.classList.add('selected');
        } else {
          ul.firstElementChild.classList.add('selected');
        }
      } else {
        var firstChild = ul.firstElementChild;
        if (firstChild) {
          firstChild.classList.add('selected');
        }
      }
    }

    function handleMouseover(event) {
      var ul = event.target.closest('ul');
      if (!ul) return;

      var children = ul.children;
      for (var i = 0; i < children.length; i++) {
        children[i].classList.remove('selected');
      }
      
      var li = event.target.closest('li');
      if (li) {
        li.classList.add('selected');
      }
    }

    function searchAndRender() {
      var input = document.querySelector('.search-prompt input');
      var text = input ? input.value.trim() : '';

      var results;
      if (text !== '') {
        results = search(text);
        renderResults(results, text);
      } else {
        renderResults(feedItems);
      }

      selectFirst();
    }

    // HTMLタグを削除するヘルパー関数
    function stripHtml(html) {
      if (!html) return '';
      var temp = document.createElement('div');
      temp.innerHTML = html;
      return temp.textContent || temp.innerText || '';
    }

    // 検索語をハイライトするヘルパー関数
    function highlightSearchTerm(text, searchTerm) {
      if (!searchTerm || !text) return text || '';
      
      // 複数の単語での検索に対応
      var terms = searchTerm.split(/\s+/).filter(function(term) {
        return term.length > 0;
      });
      
      var highlightedText = text;
      
      for (var i = 0; i < terms.length; i++) {
        var term = terms[i];
        // 特殊文字をエスケープ
        var escapedTerm = term.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
        var regex = new RegExp('(' + escapedTerm + ')', 'gi');
        highlightedText = highlightedText.replace(regex, '<span class="search-highlight">$1</span>');
      }
      
      return highlightedText;
    }

    // テキストを安全に切り取る関数
    function truncateText(text, maxLength) {
      if (!text) return '';
      if (!maxLength) maxLength = 120;
      if (text.length <= maxLength) return text;
      
      // 単語の境界で切り取り
      var truncated = text.substring(0, maxLength);
      var lastSpace = truncated.lastIndexOf(' ');
      
      if (lastSpace > maxLength * 0.8) {
        return truncated.substring(0, lastSpace) + '...';
      }
      
      return truncated + '...';
    }

    // 改良された検索関数（本文検索を強化）
    function search(query) {
      var results = [];
      var lowerQuery = query.toLowerCase();
      
      // 検索語を単語に分割
      var queryTerms = lowerQuery.split(/\s+/).filter(function(term) {
        return term.length > 0;
      });

      for (var i = 0; i < feedItems.length; i++) {
        var item = feedItems[i];
        var score = 0;
        var matchedContent = '';
        var matchDetails = {
          titleMatch: false,
          descriptionMatch: false,
          contentMatch: false,
          fullBodyMatch: false
        };

        // タイトルでの検索（最高スコア）
        if (item.title) {
          var titleLower = item.title.toLowerCase();
          var titleScore = calculateMatchScore(titleLower, queryTerms, lowerQuery);
          if (titleScore > 0) {
            score += titleScore * 15; // タイトルマッチの重み増加
            matchedContent = item.title;
            matchDetails.titleMatch = true;
          }
        }

        // 説明文での検索（高スコア）
        if (item.description) {
          var descLower = item.description.toLowerCase();
          var descScore = calculateMatchScore(descLower, queryTerms, lowerQuery);
          if (descScore > 0) {
            score += descScore * 8;
            if (!matchedContent) {
              matchedContent = item.description;
            }
            matchDetails.descriptionMatch = true;
          }
        }

        // RSS content での検索（中スコア）
        if (item.content) {
          var contentLower = item.content.toLowerCase();
          var contentScore = calculateMatchScore(contentLower, queryTerms, lowerQuery);
          if (contentScore > 0) {
            score += contentScore * 5;
            if (!matchedContent) {
              matchedContent = extractRelevantContent(item.content, lowerQuery, queryTerms);
            }
            matchDetails.contentMatch = true;
          }
        }

        // フル記事本文での検索（新機能）
        if (item.fullBody) {
          var bodyLower = item.fullBody.toLowerCase();
          var bodyScore = calculateMatchScore(bodyLower, queryTerms, lowerQuery);
          if (bodyScore > 0) {
            score += bodyScore * 3; // 本文マッチのスコア
            if (!matchedContent) {
              matchedContent = extractRelevantContent(item.fullBody, lowerQuery, queryTerms);
            }
            matchDetails.fullBodyMatch = true;
          }
        }

        if (score > 0) {
          results.push({
            title: item.title,
            link: item.link,
            description: item.description,
            content: item.content,
            fullBody: item.fullBody,
            pubDate: item.pubDate,
            score: score,
            matchedContent: matchedContent || item.description,
            matchDetails: matchDetails
          });
        }
      }

      // スコア順にソート
      return results.sort(function(a, b) {
        return b.score - a.score;
      });
    }

    // マッチスコア計算関数
    function calculateMatchScore(text, queryTerms, fullQuery) {
      if (!text) return 0;
      
      var score = 0;
      
      // 完全フレーズマッチ（最高点）
      if (text.indexOf(fullQuery) !== -1) {
        score += 10;
      }
      
      // 個別単語マッチ
      var matchedTerms = 0;
      for (var i = 0; i < queryTerms.length; i++) {
        if (text.indexOf(queryTerms[i]) !== -1) {
          matchedTerms++;
          score += 2;
        }
      }
      
      // すべての検索語がマッチした場合のボーナス
      if (matchedTerms === queryTerms.length && queryTerms.length > 1) {
        score += 5;
      }
      
      return score;
    }

    // 関連するコンテンツを抽出する関数
    function extractRelevantContent(text, query, queryTerms) {
      if (!text) return '';
      
      var bestMatch = '';
      var bestScore = 0;
      
      // 各検索語の周辺テキストを抽出
      for (var i = 0; i < queryTerms.length; i++) {
        var term = queryTerms[i];
        var index = text.toLowerCase().indexOf(term);
        
        if (index !== -1) {
          var start = Math.max(0, index - 80);
          var end = Math.min(text.length, index + term.length + 80);
          var excerpt = text.substring(start, end);
          
          // この抜粋のマッチスコアを計算
          var score = calculateMatchScore(excerpt.toLowerCase(), queryTerms, query);
          
          if (score > bestScore) {
            bestScore = score;
            bestMatch = excerpt;
            
            // 前後に省略記号を追加
            if (start > 0) bestMatch = '...' + bestMatch;
            if (end < text.length) bestMatch = bestMatch + '...';
          }
        }
      }
      
      return bestMatch || text.substring(0, 200);
    }

    function renderResults(results, searchTerm) {
      var ul = document.querySelector('.search-result ul');
      if (!ul) return;
      
      ul.innerHTML = '';

      if (results.length === 0) {
        var li = document.createElement('li');
        var div = document.createElement('div');
        div.className = 'no-results';
        div.textContent = '検索結果が見つかりませんでした';
        li.appendChild(div);
        ul.appendChild(li);
        return;
      }

      for (var i = 0; i < results.length; i++) {
        var item = results[i];
        var li = document.createElement('li');
        var a = document.createElement('a');
        var title = document.createElement('div');
        var description = document.createElement('div');
        var matchInfo = document.createElement('div');

        title.className = 'search-result-title';
        var titleText = item.title || 'タイトルなし';
        title.innerHTML = highlightSearchTerm(titleText, searchTerm || '');

        description.className = 'search-result-description';
        var descText = item.matchedContent || item.description || '';
        
        // 説明文が長すぎる場合は切り取り
        descText = truncateText(descText, 150);
        description.innerHTML = highlightSearchTerm(descText, searchTerm || '');
        
        // マッチ情報を表示（デバッグ用・オプション）
        if (searchTerm && item.matchDetails) {
          matchInfo.className = 'search-match-info';
          matchInfo.style.fontSize = '11px';
          matchInfo.style.color = '#999';
          matchInfo.style.marginTop = '4px';
          
          var matchTypes = [];
          if (item.matchDetails.titleMatch) matchTypes.push('タイトル');
          if (item.matchDetails.descriptionMatch) matchTypes.push('概要');
          if (item.matchDetails.contentMatch) matchTypes.push('RSS');
          if (item.matchDetails.fullBodyMatch) matchTypes.push('本文');
          
          if (matchTypes.length > 0) {
            matchInfo.textContent = 'マッチ: ' + matchTypes.join(', ') + ' (スコア: ' + Math.round(item.score) + ')';
          }
        }
        
        a.href = item.link || '#';

        li.addEventListener('mouseover', handleMouseover);

        a.appendChild(title);
        a.appendChild(description);
        if (matchInfo.textContent) {
          a.appendChild(matchInfo);
        }
        li.appendChild(a);
        ul.appendChild(li);
      }
    }

    function renderError() {
      var ul = document.querySelector('.search-result ul');
      if (!ul) return;
      
      ul.innerHTML = '';
      
      var li = document.createElement('li');
      var div = document.createElement('div');
      div.className = 'error-message';
      div.textContent = 'RSSフィードの取得に失敗しました';
      li.appendChild(div);
      ul.appendChild(li);
    }

    function renderLoading() {
      var ul = document.querySelector('.search-result ul');
      if (!ul) return;
      
      ul.innerHTML = '';
      
      var li = document.createElement('li');
      var div = document.createElement('div');
      div.className = 'loading-indicator';
      div.textContent = '記事を読み込み中...';
      li.appendChild(div);
      ul.appendChild(li);
    }

    // 個別記事の本文を取得する関数（強化版）
    function fetchArticleContent(url) {
      return fetch(url).then(function(response) {
        if (!response.ok) return '';
        return response.text();
      }).then(function(html) {
        var parser = new DOMParser();
        var doc = parser.parseFromString(html, 'text/html');
        
        // より詳細な記事本文を取得（複数のセレクタを試行）
        var contentSelectors = [
          // 一般的な記事コンテンツセレクタ
          'article .content',
          'article .post-content', 
          'article .entry-content',
          'article .article-content',
          'article .post-body',
          '.post-content',
          '.entry-content',
          '.article-content',
          '.content',
          '.post-body',
          'main article',
          'main .content',
          '#content article',
          '#content .post',
          '#main-content',
          '.main-content',
          // Astroやその他のフレームワーク用
          '[data-content]',
          '.prose',
          '.markdown-body',
          // 最後の手段として
          'article',
          'main',
          '#content'
        ];
        
        var fullContent = '';
        
        for (var i = 0; i < contentSelectors.length; i++) {
          var element = doc.querySelector(contentSelectors[i]);
          if (element) {
            // スクリプトタグとスタイルタグを除去
            var scripts = element.querySelectorAll('script, style, nav, header, footer, aside');
            for (var j = 0; j < scripts.length; j++) {
              scripts[j].remove();
            }
            
            var text = element.textContent || element.innerText || '';
            if (text.length > fullContent.length) {
              fullContent = text;
            }
          }
        }
        
        // テキストをクリーンアップ
        return cleanupText(fullContent);
      }).catch(function(error) {
        console.warn('Failed to fetch content for ' + url + ':', error);
        return '';
      });
    }

    // テキストクリーンアップ関数
    function cleanupText(text) {
      if (!text) return '';
      
      return text
        // 複数の空白を1つにまとめる
        .replace(/\s+/g, ' ')
        // 先頭と末尾の空白を削除
        .trim()
        // 特殊文字を正規化
        .replace(/[^\w\s\u3040-\u309F\u30A0-\u30FF\u4E00-\u9FAF\u3400-\u4DBF]/g, ' ')
        // 再度複数空白を処理
        .replace(/\s+/g, ' ');
    }

    function fetchRSS() {
      var url = new URL(location.href);
      var port = url.port ? ':' + url.port : '';

      return fetch(url.protocol + '//' + url.hostname + port + '/feed')
        .then(function(res) {
          if (res.status !== 200) {
            throw new Error('HTTP ' + res.status + ': Failed to fetch RSS feed');
          }
          return res.text();
        })
        .then(function(body) {
          var parser = new DOMParser();
          var xml = parser.parseFromString(body, 'text/xml');

          var parseError = xml.querySelector('parsererror');
          if (parseError) {
            throw new Error('Invalid XML format');
          }

          var items = xml.getElementsByTagName('item');
          if (items.length === 0) {
            console.warn('No items found in RSS feed');
          }

          console.log('Starting to process ' + items.length + ' RSS items...');

          // 基本情報を先に収集
          var itemsData = [];
          for (var i = 0; i < items.length; i++) {
            var item = items[i];
            var titleEl = item.getElementsByTagName('title')[0];
            var linkEl = item.getElementsByTagName('link')[0];
            var descriptionEl = item.getElementsByTagName('description')[0];
            var pubDateEl = item.getElementsByTagName('pubDate')[0];
            var contentEl = item.getElementsByTagName('content:encoded')[0] || 
                           item.getElementsByTagName('content')[0];

            var title = titleEl ? titleEl.textContent : 'タイトルなし';
            var link = linkEl ? linkEl.textContent : '#';
            var description = stripHtml(descriptionEl ? descriptionEl.textContent : '');
            var pubDate = pubDateEl ? pubDateEl.textContent : '';
            var content = contentEl ? contentEl.textContent : '';

            itemsData.push({
              title: title,
              link: link,
              description: description,
              pubDate: pubDate,
              content: stripHtml(content),
              fullBody: '', // 後で取得する完全な記事本文
              contentFetched: false // 本文取得完了フラグ
            });
          }

          feedItems = itemsData;
          console.log('Basic RSS data loaded. Starting to fetch full article content...');

          // すべての記事の本文を段階的に取得（改良版）
          return fetchAllArticleContent(itemsData);
        })
        .then(function() {
          fetched = true;
          console.log('All content fetching completed');
        });
    }

    // すべての記事本文を効率的に取得する関数
    function fetchAllArticleContent(items) {
      var batchSize = 3; // 同時実行数を制限
      var delay = 500; // リクエスト間の遅延（ms）
      var processed = 0;
      
      function processBatch(startIndex) {
        var endIndex = Math.min(startIndex + batchSize, items.length);
        var batchPromises = [];
        
        console.log('Processing batch ' + (startIndex / batchSize + 1) + ' (' + startIndex + '-' + (endIndex - 1) + ')');
        
        for (var i = startIndex; i < endIndex; i++) {
          var item = items[i];
          if (item.link !== '#' && !item.contentFetched) {
            batchPromises.push(
              fetchArticleContent(item.link).then(function(content) {
                return { index: i, content: content };
              }).catch(function(error) {
                console.warn('Failed to fetch content for item ' + i, error);
                return { index: i, content: '' };
              })
            );
          }
        }
        
        return Promise.all(batchPromises).then(function(results) {
          // 結果を適用
          for (var j = 0; j < results.length; j++) {
            var result = results[j];
            if (feedItems[result.index]) {
              feedItems[result.index].fullBody = result.content;
              feedItems[result.index].contentFetched = true;
              processed++;
            }
          }
          
          // 進捗をログ出力
          console.log('Content fetched: ' + processed + '/' + items.length + ' articles');
          
          // 検索結果を更新（リアルタイム更新）
          if (isModalOpen) {
            searchAndRender();
          }
          
          // 次のバッチを処理
          if (endIndex < items.length) {
            return new Promise(function(resolve) {
              setTimeout(function() {
                resolve(processBatch(endIndex));
              }, delay);
            });
          }
        });
      }
      
      // 最初のバッチから開始
      return processBatch(0);
    }

    // イベントリスナーの設定
    var openElements = document.getElementsByClassName('open-search-modal');
    for (var i = 0; i < openElements.length; i++) {
      openElements[i].addEventListener('click', openModal);
    }
    
    var overlay = document.getElementsByClassName('overlay')[0];
    if (overlay) {
      overlay.addEventListener('click', closeModal);
    }
    
    document.addEventListener('keydown', handleKeydown);
    
    var searchInput = document.querySelector('.search-prompt input');
    if (searchInput) {
      searchInput.addEventListener('input', handleInput);
    }
  });
</script>