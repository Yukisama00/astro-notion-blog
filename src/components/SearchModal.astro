---
---

<div class="search-modal-container">
  <div class="overlay"></div>

  <div class="search-modal">
    <div class="search-prompt">
      <input type="text" placeholder="Search..." />
    </div>
    <div class="search-result">
      <ul>
        <li class="selected">
          <a href="#">
            <div class="search-result-title"></div>
            <div class="search-result-description"></div>
          </a>
        </li>
      </ul>
    </div>
  </div>
</div>

<style>
  .search-modal-container {
    display: none;
  }

  .overlay {
    z-index: 99;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
  }

  .search-modal {
    z-index: 100;
    position: fixed;
    top: 100px;
    left: 20%;
    width: 60%;
    border-radius: 8px;
    background-color: white;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
    border: 1px solid #e0e0e0;
    overflow: hidden;
  }
  
  @media (max-width: 640px) {
    .search-modal {
      left: 5%;
      width: 90%;
      top: 50px;
    }
  }

  .search-prompt {
    margin: 0;
    padding: 16px;
    background-color: #f8f9fa;
    border-bottom: 1px solid #e0e0e0;
  }
  
  .search-prompt input {
    width: 100%;
    border: 2px solid #e0e0e0;
    border-radius: 6px;
    padding: 12px 16px;
    background-color: white;
    color: #333;
    font-size: 16px;
    line-height: 1.4;
    outline: none;
    transition: border-color 0.2s ease;
  }
  
  .search-prompt input:focus {
    border-color: #0066cc;
    box-shadow: 0 0 0 3px rgba(0, 102, 204, 0.1);
  }

  .search-result {
    background-color: white;
    max-height: 400px;
    overflow-y: auto;
  }
  
  .search-result ul {
    list-style: none;
    margin: 0;
    padding: 8px 0;
  }
  
  .search-result li {
    margin: 0 !important;
    padding: 0 !important;
    border-bottom: 1px solid #e8e8e8 !important;
    background-color: #f9f9f9;
  }
  
  .search-result li:last-child {
    border-bottom: none !important;
  }
  
  .search-result li a {
    display: block !important;
    padding: 16px 16px !important;
    text-decoration: none !important;
    color: #333 !important;
    transition: all 0.15s ease !important;
    border-left: 4px solid transparent !important;
    background-color: white;
    margin: 2px 0;
  }
  
  .search-result li a:hover {
    background-color: #f0f7ff;
    border-left-color: #0066cc;
  }
  
  .search-result li a:hover .search-result-title {
    color: #0066cc;
  }
  
  .search-result li a:hover .search-result-description {
    color: #555;
  }
  
  .search-result li.selected a {
    background-color: #0066cc;
    color: white;
    border-left-color: #004499;
  }

  .search-result-title {
    padding: 0;
    color: #1a1a1a;
    font-size: 18px;
    line-height: 1.3;
    font-weight: 700;
    margin-bottom: 8px;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  }
  
  .search-result-description {
    margin: 0;
    color: #666;
    opacity: 0.9;
    font-size: 14px;
    line-height: 1.4;
    font-weight: 400;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  
  .search-result li.selected .search-result-title {
    color: white;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  }
  
  .search-result li.selected .search-result-description {
    color: rgba(255, 255, 255, 0.9);
    opacity: 1;
  }

  .no-results, .error-message {
    padding: 24px 16px;
    text-align: center;
    color: #666;
    font-style: italic;
  }
  
  .error-message {
    color: #dc3545;
    font-weight: 600;
    font-style: normal;
  }

  .search-highlight {
    background-color: #ffeb3b !important;
    font-weight: bold !important;
    padding: 2px 4px !important;
    border-radius: 3px !important;
    color: #1a1a1a !important;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1) !important;
    border: 1px solid rgba(255, 193, 7, 0.6) !important;
}

.search-result li.selected .search-highlight {
    background-color: #fff3cd !important;
    color: #856404 !important;
    border-color: #ffeaa7 !important;
    font-weight: 700 !important;
}

  .loading-indicator {
    padding: 24px 16px;
    text-align: center;
    color: #666;
    font-style: italic;
  }

  .match-type-indicator {
    display: inline-block;
    font-size: 12px;
    padding: 2px 6px;
    border-radius: 3px;
    margin-right: 8px;
    font-weight: 500;
  }

  .match-type-title {
    background-color: #e3f2fd;
    color: #1976d2;
  }

  .match-type-content {
    background-color: #e8f5e8;
    color: #388e3c;
  }

  .article-separator {
    border-top: 2px solid #0066cc;
    margin: 4px 0;
    background-color: #f0f7ff;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    console.log('SearchModal script loaded');

    var feedItems = [];
    var fetched = false;
    var isModalOpen = false;
    var isLoading = false;

    function openModal() {
      isModalOpen = true;
      var container = document.querySelector('.search-modal-container');
      if (container) {
        container.style.display = 'block';
      }
      
      var input = document.querySelector('.search-prompt input');
      if (input) {
        input.focus();
      }

      if (!fetched && !isLoading) {
        isLoading = true;
        renderLoading();
        fetchRSS().then(function() {
          searchAndRender();
        }).catch(function(error) {
          console.error('Failed to fetch RSS:', error);
          renderError();
        }).finally(function() {
          isLoading = false;
        });
      } else {
        searchAndRender();
      }
    }

    function closeModal() {
      isModalOpen = false;
      var container = document.querySelector('.search-modal-container');
      if (container) {
        container.style.display = 'none';
      }
      
      var input = document.querySelector('.search-prompt input');
      if (input) {
        input.value = '';
      }
    }

    function handleKeydown(event) {
      if (!isModalOpen) return;

      if (event.keyCode === 13) {
        // Enter
        event.preventDefault();
        select();
      } else if (event.keyCode === 27) {
        // ESC
        event.preventDefault();
        closeModal();
      } else if (event.keyCode === 38) {
        // Up
        selectUp(event);
      } else if (event.keyCode === 40) {
        // Down
        selectDown(event);
      }
    }

    function handleInput() {
      if (isModalOpen) {
        searchAndRender();
      }
    }

    function select() {
      var selectedLink = document.querySelector('.search-result ul > li.selected a');
      if (selectedLink && selectedLink.href !== '#') {
        window.location.href = selectedLink.href;
      }
    }

    function selectFirst() {
      var currentSelected = document.querySelector('.search-result ul > li.selected');
      if (currentSelected) {
        currentSelected.classList.remove('selected');
      }

      var firstItem = document.querySelector('.search-result ul > li:first-child');
      if (firstItem) {
        firstItem.classList.add('selected');
      }
    }

    function selectUp(event) {
      event.preventDefault();

      var ul = document.querySelector('.search-result ul');
      var selected = ul.querySelector('.selected');
      if (selected) {
        selected.classList.remove('selected');

        if (selected.previousElementSibling) {
          selected.previousElementSibling.classList.add('selected');
        } else {
          ul.lastElementChild.classList.add('selected');
        }
      } else {
        var lastChild = ul.lastElementChild;
        if (lastChild) {
          lastChild.classList.add('selected');
        }
      }
    }

    function selectDown(event) {
      event.preventDefault();

      var ul = document.querySelector('.search-result ul');
      var selected = ul.querySelector('.selected');
      if (selected) {
        selected.classList.remove('selected');

        if (selected.nextElementSibling) {
          selected.nextElementSibling.classList.add('selected');
        } else {
          ul.firstElementChild.classList.add('selected');
        }
      } else {
        var firstChild = ul.firstElementChild;
        if (firstChild) {
          firstChild.classList.add('selected');
        }
      }
    }

    function handleMouseover(event) {
      var ul = event.target.closest('ul');
      if (!ul) return;

      var children = ul.children;
      for (var i = 0; i < children.length; i++) {
        children[i].classList.remove('selected');
      }
      
      var li = event.target.closest('li');
      if (li) {
        li.classList.add('selected');
      }
    }

    function searchAndRender() {
      var input = document.querySelector('.search-prompt input');
      var text = input ? input.value.trim() : '';

      var results;
      if (text !== '') {
        results = search(text);
        renderResults(results, text);
      } else {
        renderResults(feedItems);
      }

      selectFirst();
    }

    // 安全な文字列エスケープ関数
    function escapeHtml(text) {
      if (!text) return '';
      var div = document.createElement('div');
      div.textContent = text;
      return div.innerHTML;
    }

    // HTMLタグを安全に削除する関数
    function stripHtml(html) {
      if (!html) return '';
      var div = document.createElement('div');
      div.innerHTML = html;
      return div.textContent || div.innerText || '';
    }

    // 安全なハイライト関数
    function highlightSearchTerm(text, searchTerm) {
      if (!searchTerm || !text) return escapeHtml(text || '');
      
      var escapedText = escapeHtml(text);
      var terms = searchTerm.toLowerCase().split(/\s+/).filter(function(term) {
        return term.length > 0;
      });
      
      var highlightedText = escapedText;
      
      for (var i = 0; i < terms.length; i++) {
        var term = terms[i];
        var escapedTerm = term.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
        var regex = new RegExp('(' + escapedTerm + ')', 'gi');
        highlightedText = highlightedText.replace(regex, '<span class="search-highlight">$1</span>');
      }
      
      return highlightedText;
    }

    // シンプルな検索関数
    function search(query) {
      var results = [];
      var queryLower = query.toLowerCase();
      var queryTerms = queryLower.split(/\s+/).filter(function(term) {
        return term.length > 0;
      });

      // 記事をユニークにするためのSet
      var processedArticles = {};

      for (var i = 0; i < feedItems.length; i++) {
        var item = feedItems[i];
        
        // 既に処理された記事はスキップ
        if (processedArticles[item.link]) {
          continue;
        }

        // 記事本文での検索のみ
        if (item.fullBody) {
          var bodyLower = item.fullBody.toLowerCase();
          var bodyMatches = false;
          for (var j = 0; j < queryTerms.length; j++) {
            if (bodyLower.indexOf(queryTerms[j]) !== -1) {
              bodyMatches = true;
              break;
            }
          }
          
          if (bodyMatches) {
            // この記事を処理済みとしてマーク
            processedArticles[item.link] = true;
            
            // 記事タイトルと本文抜粋を1つの結果として追加
            var excerpt = extractExcerpt(item.fullBody, queryTerms);
            results.push({
              title: item.title,
              excerpt: excerpt,
              link: item.link,
              pubDate: item.pubDate
            });
          }
        }
      }

      return results;
    }

    // 検索語周辺のテキストを抽出
    function extractExcerpt(text, queryTerms) {
      if (!text) return '';
      
      var textLower = text.toLowerCase();
      var bestIndex = -1;
      var bestTerm = '';
      
      // 最初に見つかった検索語の位置を取得
      for (var i = 0; i < queryTerms.length; i++) {
        var index = textLower.indexOf(queryTerms[i]);
        if (index !== -1) {
          if (bestIndex === -1 || index < bestIndex) {
            bestIndex = index;
            bestTerm = queryTerms[i];
          }
        }
      }
      
      if (bestIndex === -1) return text.substring(0, 150);
      
      // 検索語の前後100文字を取得
      var start = Math.max(0, bestIndex - 100);
      var end = Math.min(text.length, bestIndex + bestTerm.length + 100);
      var excerpt = text.substring(start, end);
      
      if (start > 0) excerpt = '...' + excerpt;
      if (end < text.length) excerpt = excerpt + '...';
      
      return excerpt;
    }

    function renderResults(results, searchTerm) {
    var ul = document.querySelector('.search-result ul');
    if (!ul) return;
    
    ul.innerHTML = '';
    
    console.log('Rendering results:', results.length, 'Search term:', searchTerm); // デバッグ

    if (results.length === 0) {
        var li = document.createElement('li');
        var div = document.createElement('div');
        div.className = 'no-results';
        div.textContent = '検索結果が見つかりませんでした';
        li.appendChild(div);
        ul.appendChild(li);
        return;
    }

    for (var i = 0; i < results.length; i++) {
        var result = results[i];
        
        // タイトル行
        var titleLi = document.createElement('li');
        titleLi.classList.add('article-separator');
        var titleA = document.createElement('a');
        var titleDiv = document.createElement('div');
        var titleDesc = document.createElement('div');

        titleDiv.className = 'search-result-title';
        titleDesc.className = 'search-result-description';

        // ハイライト適用をデバッグ
        var highlightedTitle = highlightSearchTerm(result.title, searchTerm || '');
        console.log('Original title:', result.title, 'Highlighted:', highlightedTitle);
        
        titleDiv.innerHTML = highlightedTitle;
        titleDesc.innerHTML = escapeHtml(result.title);

        titleA.href = result.link || '#';
        titleA.appendChild(titleDiv);
        titleA.appendChild(titleDesc);
        titleLi.appendChild(titleA);
        titleLi.addEventListener('mouseover', handleMouseover);
        ul.appendChild(titleLi);

        // 本文抜粋行
        var contentLi = document.createElement('li');
        var contentA = document.createElement('a');
        var contentDiv = document.createElement('div');
        var contentDesc = document.createElement('div');

        contentDiv.className = 'search-result-title';
        contentDesc.className = 'search-result-description';

        var highlightedExcerpt = highlightSearchTerm(result.excerpt, searchTerm || '');
        console.log('Original excerpt:', result.excerpt.substring(0, 50), 'Highlighted:', highlightedExcerpt.substring(0, 50));
        
        contentDiv.innerHTML = highlightedExcerpt;
        contentDesc.innerHTML = escapeHtml(result.title);

        contentA.href = result.link || '#';
        contentA.appendChild(contentDiv);
        contentA.appendChild(contentDesc);
        contentLi.appendChild(contentA);
        contentLi.addEventListener('mouseover', handleMouseover);
        ul.appendChild(contentLi);
    }
}

    function renderError() {
      var ul = document.querySelector('.search-result ul');
      if (!ul) return;
      
      ul.innerHTML = '';
      
      var li = document.createElement('li');
      var div = document.createElement('div');
      div.className = 'error-message';
      div.textContent = 'RSSフィードの取得に失敗しました';
      li.appendChild(div);
      ul.appendChild(li);
    }

    function renderLoading() {
      var ul = document.querySelector('.search-result ul');
      if (!ul) return;
      
      ul.innerHTML = '';
      
      var li = document.createElement('li');
      var div = document.createElement('div');
      div.className = 'loading-indicator';
      div.textContent = '記事を読み込み中...';
      li.appendChild(div);
      ul.appendChild(li);
    }

    // 記事本文取得関数
    function fetchArticleContentWithProxy(url) {
  // 同一オリジンのプロキシエンドポイントを使用
  const proxyUrl = `/api/proxy?url=${encodeURIComponent(url)}`;
  
  return fetch(proxyUrl).then(function(response) {
    if (!response.ok) return { content: '', headings: [] };
    return response.text();
  }).then(function(html) {
    var parser = new DOMParser();
    var doc = parser.parseFromString(html, 'text/html');
    
    var contentSelectors = [
      'article .content',
      'article .post-content', 
      'article .entry-content',
      '.post-content',
      '.entry-content',
      '.content',
      'main article',
      'article',
      'main'
    ];
    
    var fullContent = '';
    var headings = [];
    
    for (var i = 0; i < contentSelectors.length; i++) {
      var element = doc.querySelector(contentSelectors[i]);
      if (element) {
        var scripts = element.querySelectorAll('script, style, nav, header, footer, aside');
        for (var j = 0; j < scripts.length; j++) {
          scripts[j].remove();
        }
        
        var text = element.textContent || element.innerText || '';
        if (text.length > fullContent.length) {
          fullContent = text;
        }
        
        if (headings.length === 0) {
          var headingElements = element.querySelectorAll('h1, h2, h3, h4, h5, h6');
          for (var k = 0; k < headingElements.length; k++) {
            var heading = headingElements[k];
            var level = parseInt(heading.tagName.substring(1));
            var text = heading.textContent || heading.innerText || '';
            var anchorId = heading.id || '';
            
            if (text.trim()) {
              headings.push({
                level: level,
                text: text.trim(),
                anchorId: anchorId
              });
            }
          }
        }
      }
    }
    
    return {
      content: fullContent.replace(/\s+/g, ' ').trim(),
      headings: headings
    };
  }).catch(function(error) {
    console.warn('Failed to fetch content for ' + url + ':', error);
    return { content: '', headings: [] };
  });
}

    function fetchRSS() {
      var url = new URL(location.href);
      var port = url.port ? ':' + url.port : '';

      return fetch(url.protocol + '//' + url.hostname + port + '/feed')
        .then(function(res) {
          if (res.status !== 200) {
            throw new Error('HTTP ' + res.status + ': Failed to fetch RSS feed');
          }
          return res.text();
        })
        .then(function(body) {
          var parser = new DOMParser();
          var xml = parser.parseFromString(body, 'text/xml');

          var parseError = xml.querySelector('parsererror');
          if (parseError) {
            throw new Error('Invalid XML format');
          }

          var items = xml.getElementsByTagName('item');
          console.log('Processing ' + items.length + ' RSS items...');

          var itemsData = [];
          for (var i = 0; i < items.length; i++) {
            var item = items[i];
            var titleEl = item.getElementsByTagName('title')[0];
            var linkEl = item.getElementsByTagName('link')[0];
            var descriptionEl = item.getElementsByTagName('description')[0];
            var pubDateEl = item.getElementsByTagName('pubDate')[0];

            var title = titleEl ? titleEl.textContent : 'タイトルなし';
            var link = linkEl ? linkEl.textContent : '#';
            var description = stripHtml(descriptionEl ? descriptionEl.textContent : '');
            var pubDate = pubDateEl ? pubDateEl.textContent : '';

            itemsData.push({
              title: title,
              link: link,
              description: description,
              pubDate: pubDate,
              fullBody: '',
              headings: []
            });
          }

          feedItems = itemsData;
          
          return fetchAllArticleContent(itemsData);
        })
        .then(function() {
          fetched = true;
          console.log('All content loading completed');
        });
    }

    function fetchAllArticleContent(items) {
      var promises = [];
      
      for (var i = 0; i < items.length; i++) {
        var item = items[i];
        if (item.link !== '#') {
          promises.push(
            fetchArticleContent(item.link).then(function(index) {
              return function(result) {
                feedItems[index].fullBody = result.content;
                feedItems[index].headings = result.headings;
              };
            }(i))
          );
        }
      }
      
      return Promise.all(promises);
    }

    // イベントリスナーの設定
    var openElements = document.getElementsByClassName('open-search-modal');
    for (var i = 0; i < openElements.length; i++) {
      openElements[i].addEventListener('click', openModal);
    }
    
    var overlay = document.getElementsByClassName('overlay')[0];
    if (overlay) {
      overlay.addEventListener('click', closeModal);
    }
    
    document.addEventListener('keydown', handleKeydown);
    
    var searchInput = document.querySelector('.search-prompt input');
    if (searchInput) {
      searchInput.addEventListener('input', handleInput);
    }
  });
</script>