---
import { NUMBER_OF_POSTS_PER_PAGE } from '../server-constants.ts'
import {
  getPosts,
  getRankedPosts,
  getAllTags,
  getNumberOfPages,
} from '../lib/notion/client.ts'
import Layout from '../layouts/Layout.astro'
import NoContents from '../components/NoContents.astro'
import PostDate from '../components/PostDate.astro'
import PostUpdateDate from '../components/PostUpdateDate.astro'
import PostTags from '../components/PostTags.astro'
import PostTitle from '../components/PostTitle.astro'
import PostFeaturedImage from '../components/PostFeaturedImage.astro'
import PostExcerpt from '../components/PostExcerpt.astro'
import ReadMoreLink from '../components/ReadMoreLink.astro'
import Pagination from '../components/Pagination.astro'
import BlogPostsLink from '../components/BlogPostsLink.astro'
import BlogTagsLink from '../components/BlogTagsLink.astro'
import SNSLink from '../components/SNSLink.astro'
import styles from '../styles/blog.module.css'

const [posts, rankedPosts, tags, numberOfPages] = await Promise.all([
  getPosts(NUMBER_OF_POSTS_PER_PAGE),
  getRankedPosts(5),
  getAllTags(),
  getNumberOfPages(),
])

const links = [
  { href: 'https://x.com/yukisama00', src: '/icons/x.png', alt: 'X' },
  { href: 'https://www.youtube.com/@altu4616', src: '/icons/youtube.png', alt: 'YouTube' },
]
---

<Layout>
  <div slot="main" class={`${styles.main} blog-container`}>
    {
      posts.length === 0 ? (
        <NoContents contents={posts} />
      ) : (
        <div class="posts-grid">
          {posts.map((post) => (
            <article class="blog-card" key={post.Slug}>
              <div class="card-image-container">
                <PostFeaturedImage post={post} />
                <div class="card-overlay">
                  <PostTags post={post} />
                </div>
              </div>
              
              <div class="card-content">
                <div class="card-header">
                  <PostTitle post={post} />
                </div>
                
                <div class="card-meta">
                  <PostDate post={post} />
                  <PostUpdateDate post={post} />
                </div>
                
                <div class="card-excerpt">
                  <PostExcerpt post={post} />
                </div>
                
                <div class="card-footer">
                  <ReadMoreLink post={post} />
                </div>
              </div>
            </article>
          ))}
        </div>
      )
    }

    <footer class="blog-footer">
      <Pagination currentPage={1} numberOfPages={numberOfPages} />
    </footer>
  </div>

  <div slot="aside" class={styles.aside}>
    <BlogPostsLink heading="ÊúÄÊñ∞Ë®ò‰∫ã" posts={rankedPosts} />
    <BlogTagsLink heading="Ë®ò‰∫ã„Ç´„ÉÜ„Ç¥„É™" tags={tags} />
    <SNSLink heading="„É™„É≥„ÇØ" links={links} />
  </div>
</Layout>

<style>
  .blog-container {
    padding: 0;
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
    gap: 32px;
    padding: 32px 0;
  }

  @media (max-width: 1200px) {
    .posts-grid {
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
      gap: 24px;
    }
  }

  @media (max-width: 768px) {
    .posts-grid {
      grid-template-columns: 1fr;
      gap: 20px;
      padding: 24px 0;
    }
  }

  .blog-card {
    background: #ffffff;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 
      0 4px 6px rgba(0, 0, 0, 0.05),
      0 1px 3px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(148, 163, 184, 0.1);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .blog-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #3b82f6, #8b5cf6, #06b6d4);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.4s ease;
    z-index: 2;
  }

  .blog-card:hover {
    transform: translateY(-8px);
    box-shadow: 
      0 20px 40px rgba(0, 0, 0, 0.12),
      0 8px 16px rgba(0, 0, 0, 0.08);
    border-color: rgba(59, 130, 246, 0.2);
  }

  .blog-card:hover::before {
    transform: scaleX(1);
  }

  .card-image-container {
    position: relative;
    width: 100%;
    height: 240px;
    overflow: hidden;
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  }

  .card-image-container :global(img) {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    transition: transform 0.4s ease;
  }

  .blog-card:hover .card-image-container :global(img) {
    transform: scale(1.05);
  }

  .card-overlay {
    position: absolute;
    top: 16px;
    left: 16px;
    right: 16px;
    z-index: 1;
  }

  .card-overlay :global(.tags) {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }

  .card-overlay :global(.tag) {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    color: #3b82f6;
    font-size: 0.75rem;
    font-weight: 600;
    padding: 6px 12px;
    border-radius: 20px;
    border: 1px solid rgba(59, 130, 246, 0.2);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: all 0.2s ease;
  }

  .card-overlay :global(.tag:hover) {
    background: #3b82f6;
    color: white;
    transform: translateY(-1px);
  }

  .card-content {
    padding: 24px;
    display: flex;
    flex-direction: column;
    flex: 1;
    gap: 16px;
  }

  .card-header :global(h2) {
    margin: 0;
    font-size: 1.375rem;
    font-weight: 700;
    color: #1e293b;
    line-height: 1.4;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    transition: color 0.2s ease;
  }

  .blog-card:hover .card-header :global(h2) {
    color: #3b82f6;
  }

  .card-header :global(a) {
    text-decoration: none;
    color: inherit;
  }

  .card-meta {
    display: flex;
    align-items: center;
    gap: 12px;
    font-size: 0.875rem;
    color: #64748b;
    flex-wrap: wrap;
  }

  .card-meta :global(time) {
    display: flex;
    align-items: center;
    gap: 6px;
    background: #f8fafc;
    padding: 4px 10px;
    border-radius: 12px;
    border: 1px solid #e2e8f0;
  }

  .card-meta :global(time::before) {
    content: 'üìÖ';
    font-size: 0.75rem;
  }

  .card-excerpt {
    flex: 1;
  }

  .card-excerpt :global(p) {
    color: #475569;
    line-height: 1.6;
    margin: 0;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    font-size: 0.9375rem;
  }

  .card-footer {
    margin-top: auto;
    padding-top: 16px;
    border-top: 1px solid #f1f5f9;
  }

  .card-footer :global(.read-more) {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    color: #3b82f6;
    font-weight: 600;
    font-size: 0.875rem;
    text-decoration: none;
    padding: 8px 16px;
    border-radius: 12px;
    background: rgba(59, 130, 246, 0.05);
    border: 1px solid rgba(59, 130, 246, 0.1);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .card-footer :global(.read-more::before) {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
    transition: left 0.5s ease;
  }

  .card-footer :global(.read-more:hover) {
    background: #3b82f6;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
    gap: 12px;
  }

  .card-footer :global(.read-more:hover::before) {
    left: 100%;
  }

  .card-footer :global(.read-more::after) {
    content: '‚Üí';
    transition: transform 0.3s ease;
    font-weight: bold;
  }

  .card-footer :global(.read-more:hover::after) {
    transform: translateX(4px);
  }

  .blog-footer {
    margin-top: 48px;
    padding-top: 32px;
    border-top: 1px solid rgba(148, 163, 184, 0.1);
  }

  /* ÁîªÂÉè„Åå„Å™„ÅÑÂ†¥Âêà„ÅÆ„Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØ */
  .card-image-container:has(:global(img[src=""])), 
  .card-image-container:not(:has(:global(img))) {
    background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 50%, #06b6d4 100%);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .card-image-container:has(:global(img[src=""])):before,
  .card-image-container:not(:has(:global(img))):before {
    content: 'üìù';
    font-size: 4rem;
    opacity: 0.7;
  }

  /* „É¨„Çπ„Éù„É≥„Ç∑„ÉñÂØæÂøú */
  @media (max-width: 480px) {
    .card-content {
      padding: 20px;
      gap: 14px;
    }

    .card-header :global(h2) {
      font-size: 1.25rem;
    }

    .card-image-container {
      height: 200px;
    }

    .card-overlay {
      top: 12px;
      left: 12px;
      right: 12px;
    }

    .card-overlay :global(.tag) {
      font-size: 0.7rem;
      padding: 4px 8px;
    }
  }

  /* „ÉÄ„Éº„ÇØ„É¢„Éº„ÉâÂØæÂøú */
  @media (prefers-color-scheme: dark) {
    .blog-card {
      background: #1e293b;
      border-color: rgba(71, 85, 105, 0.3);
    }

    .card-header :global(h2) {
      color: #f1f5f9;
    }

    .blog-card:hover .card-header :global(h2) {
      color: #60a5fa;
    }

    .card-excerpt :global(p) {
      color: #cbd5e1;
    }

    .card-meta {
      color: #94a3b8;
    }

    .card-meta :global(time) {
      background: #334155;
      border-color: #475569;
    }

    .card-footer {
      border-color: #334155;
    }

    .card-overlay :global(.tag) {
      background: rgba(30, 41, 59, 0.95);
      color: #60a5fa;
      border-color: rgba(96, 165, 250, 0.3);
    }
  }

  /* „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ÊúÄÈÅ©Âåñ */
  @media (prefers-reduced-motion: reduce) {
    .blog-card,
    .blog-card::before,
    .card-image-container :global(img),
    .card-footer :global(.read-more) {
      transition: none;
    }

    .blog-card:hover {
      transform: none;
    }

    .blog-card:hover .card-image-container :global(img) {
      transform: none;
    }
  }
</style>